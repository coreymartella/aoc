q
k.eql?(Point.new(0,19))
dist[k]
k = dist.keys.second
dist.keys
dist[Point.new(0,19)]
unvisited.include?(Point.new(0,19))
unvisited.include?(@s)
unvisited.size
curr
c
n
c
n
unvisited.include?(node)
dist[node]
curr
node
c
n
[dist[node], dist[curr] + 1].min
curr == node
unvisited.include?(node)
dist[node]
node
@e
@s
q
curr == Point.new(93,29)
curr
n
curr
c
q
curr == Point.new(0,20)
curr
unvisited.select{|n| n.x == 0}.sort
unvisited.select{|n| n.x == 0}
unvisited.detect{|n| n == Point.new(0,19)}
unvisted.detect{|n| n == Point.new(0,19)}
dist[Point.new(93,29)]
unvisited[Point.new(93,29)]
unvisited.min_by{|n| dist[n]}
@s
s
curr
n
unvisited.size
dist.select{|_,v| v < INFINITY}
dist[node]
dist[node] = [dist[node], dist[curr] + 1].min
dist[node]
dist[curr]
curr <=> node
curr
node
q
c
q
qy
q
c
q
item = eval monkey.operation.gsub("old", monkey.items.first.to_s)
item = monkey.operation.gsub("old", monkey.items.first.to_s)
item = monkey.operation.gsub("old", monkey.items.first)
monkey.operation
c
n
monkeys.first.operation
monkeys.first
n
data.first
data.size
data
q
qy
n
val
@x
@
x
cycle
c
x
q
qy
self.x
@x
self.x
self.x += val.to_i
self.x
val
self.x
val.to_i
val
c
self.x
x
n
x
n
cycle
x
cycle
line
val
c
t.y
h.y
@t
n
h.x > t.x
n
h.y
t.y
n
h.x
t.x
n
h.dist(t) <= 2**0.5
@t
@h
c
@h
@t
n
@t
@h
n
@t
@h
h
h.dist(t)
h.dist(t) <= 2**0.5
c
q
c
h.dist(t) <= 2**0.5
h.dist(t) < 2**0.5
2**0.5
h.dist(t)
h.man_dist(t)
c
@t
@h
h
h.man_dist(t)
n
c
h.x
(h.x - t.x).abs * (h.y - t.y).abs
n
 t.x == h.x
h.man_dist(t)
@t
@h
c
line
@t
@h
h
c
n
row
r
c
graph
graph.size
graph.keys
c
@sizes
c
@sizes
c
pp @sizes
@sizes
@sizes["/"]
puts dirs.keys.sort
q
c
command
c
dest
n
dest = command[/cd (.*)/, 1]
command
c
boxes.size
boxes
n
line
q
z
iz
iy
ix
fc
x
iz
q
c
ix = x & fc[0]
x
fc
q
dupes.flatten(1).histogram.values.max
dupes.flatten(1).histogram
dupes.flatten(1).uniq.size
dupes.flatten(1).size
dupes.size
ons.keys.size
overlaps.size
overlaps
lines.size
line
li
dupes
c
q
dupes.first
dupes.uniq.size
dupes.size
dupes
c
overlaps
q
c
q
c
n
new_ons
old_ons
n
old_ons
n
new_ons
n
ix
oxl
xl.any?
n
xr
xl
oxr
oxl
x
ix
n
z
y
x
oz
oy
ox
s
